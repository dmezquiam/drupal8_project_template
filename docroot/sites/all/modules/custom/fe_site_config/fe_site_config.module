<?php
/**
 * @file
 * Code for the Site Config feature.
 */

include_once 'fe_site_config.features.inc';

/**
 * Implements hook_form_alter().
 */
function fe_site_config_form_alter(&$form, &$form_state, $form_id) {

  $content_types = array(
    'news_node_form',
    'training_opportunity_node_form',
    'video_node_form',
  );

  if (in_array($form_id, $content_types)) {

    global $language;

    $node = $form['#node'];
    $node_language = $node->language;

    if ($language->language != $node_language) {

      $voc = taxonomy_vocabulary_machine_name_load('topic');
      $options = taxonomy_get_tree($voc->vid);
      $options = i18n_taxonomy_translate_terms($options, $node_language);

      $translate_options = array('_none' => t('- None -'));
      foreach ($options as $tid => $term) {
        $translate_options[$tid] = $term->name;
      }

      // For all fields that use topic taxonomy
      $field_list = array('field_topic', 'field_category', 'field_primary_topic');
      foreach($field_list as $field_name) {
        if (isset($form[$field_name])) {
          $default = array();
          foreach ($node->{$field_name}[LANGUAGE_NONE] as $value) {
            $default[] = $value['tid'];
          }
          $form[$field_name][LANGUAGE_NONE]['#options'] = $translate_options;
          $form[$field_name][LANGUAGE_NONE]['#default_value'] = $default;
        }
      }

    }
  }
}


/**
 * Implements hook_query_TAG_alter().
 */
function fe_site_config_query_term_access_alter(QueryAlterableInterface $query) {

  $path = request_uri();
  // Remove starting slash (present only in some cases)
  $path = ltrim($path, '/');

  // Change taxo autocomplete query to look only for terms with language = current node language
  // Here can be added control for specific vocabulary
  if (preg_match('|^[a-zA-Z]*/taxonomys/autocomplete(/.*)?|', $path)) {
    global $language;
    $referrer = $_SERVER['HTTP_REFERER'];

    if ($referrer) {
      $referrer = parse_url($referrer);
      if (isset($referrer['query'])) {
        $referrer_query = array();
        $explode_query = explode('&', $referrer['query']);
        foreach ($explode_query as $value) {
          $value = explode('=', $value);
          $referrer_query[$value[0]] = $value[1];
        }
      }

      $referrer = explode('/', $referrer['path']);
      $nid = FALSE;
      if (is_numeric($referrer[3])) {
        $nid = $referrer[3];
      }
      elseif (isset($referrer_query['translation']) && is_numeric($referrer_query['translation'])) {
        $nid = $referrer_query['translation'];
        if (!empty($referrer_query['target'])) {
          $node_language = $referrer_query['target'];
        }
      }

      if ($nid) {
        $node = node_load($nid);
        // Here can be added control for specific content type
        if (!isset($node_language)) {
          $node_language = $node->language;
        }

        if ($node_language != $language->language) {
          if (module_exists('i18n_taxonomy') && ($table_alias = i18n_select_check_table($query, 'taxonomy_term_data', 'tid'))) {
            $conditions =& $query->conditions();
            foreach ($conditions as $key => $condition) {
              if ($condition['field'] == $table_alias . '.language') {
                unset($conditions[$key]);
              }
            }
            $query->condition($table_alias . '.language', array($node_language, 'und'), 'IN');
          }
        }
      }
    }
  }
}

/**
 * Implements hook_menu_alter.
 */
function fe_site_config_menu_alter(&$items) {
  $redirect_to_frontpage = array(
    'node',
    'tags/%',
    'taxonomy/term/%'
    );

  foreach ($redirect_to_frontpage as $old_url) {
    $items[$old_url]['access callback'] = TRUE;
    $items[$old_url]['page callback'] = '_fe_site_config_redirect_to_frontpage';
    $items[$old_url]['type'] = MENU_CALLBACK;
  }
}


function _fe_site_config_redirect_to_frontpage() {
  global $base_url;
  $redirect = $base_url . url();
  drupal_goto($path = $redirect);
}
