<?php
/**
 * @file
 * Code for the News feature.
 */

include_once 'fe_news.features.inc';

/**
 * Implements hook_preprocess_node()
 */
function fe_news_preprocess_node(&$variables) {
  $node = $variables['node'];
  if ($node->type == 'news') {
    _fe_news_preprocess_news($variables);
  }
}

/**
 * Preprocess news depending of field_news_type.
 */
function _fe_news_preprocess_news(&$variables) {
  $node = $variables['node'];
  $type = fe_news_get_type($node);
  switch ($type) {
    case '1':
      _fe_news_preprocess_type_news($variables);
      break;
    case '2':
      _fe_news_preprocess_type_resource($variables);
      break;
  }
}

/**
 * Returns the value of field_news_type.
 * Returns NULL if the field is not set.
 */
function fe_news_get_type($node) {
  $type = NULL;
  $node_wrapper = entity_metadata_wrapper('node', $node);
  if ($node_wrapper) {
    $type = $node_wrapper->field_news_type->value();
  }
  return $type;
}

/**
 * Preprocess nodes of type 'News'.
 */
function _fe_news_preprocess_type_news(&$variables) {
  global $base_url;
  $node = $variables['node'];
  $author = _fe_news_get_author($node->nid);
  $variables['author'] = $author->profile_link ?
    l($author->name, $author->profile_link) :
    $author->name;
  $href = $base_url . $variables['node_url'];
  drupal_add_html_head_link(
    array('rel' => 'canonical', 'href' => $href),
    TRUE
  );

  $tags_url = fe_news_redirect_tags($node->nid);
  $variables['url_tags'] = $tags_url;

  $items_field_hide_image = field_get_items('node', $node, 'field_hide_image_on_node_page');

  $hide_image = false;
  if (isset($items_field_hide_image) && ! empty($items_field_hide_image)) {
    $item_field_hide_image = array_shift($items_field_hide_image);
    $field_hide_image = $item_field_hide_image['value'];
    if ($field_hide_image == 1) {
      $hide_image = true;
    }
  }
  $variables['hide_image'] = $hide_image;
}

/**
 * Preprocess nodes of type 'Resources'.
 */
function _fe_news_preprocess_type_resource(&$variables) {
  // First preprocess the node like a node of type News.
  _fe_news_preprocess_type_news($variables);

  // On teaser view mode.
  if ($variables['teaser']) {
    $variables['classes_array'][] = 'article-item-list-no-body';
    unset($variables['content']['body']);
  }
}

function fe_news_redirect_tags($nid = ''){
  if ($nid == '') {
    return '';
  }

  $tags = _fe_news_return_tags_array($nid);

  if (empty($tags)) {
    return '';
  }

  $tags_markup = '<section class="field field-name-field-tags field-type-taxonomy-term-reference field-label-inline clearfix view-mode-full"><h2 class="field-label">Tags:&nbsp;</h2><ul class="field-items">';

  $node = node_load($nid);

  if ($node->type == 'news') {
    $type = 'news';
  }
  else if ($node->type == 'training_opportunity') {
    $type = 'opportunities';
  } else return '';

  foreach ($tags as $tid => $name) {
    $path = $type . '/' . $tid ;
    $tag_link = l($name, $path);
    $tag_markup = '<li class="field-item-odd">' . $tag_link . '</li>';
    $tags_markup .= $tag_markup;
  }

  $tags_markup  .= '</ul></section>';

  return $tags_markup;
}


//Devuelve un array con los tags del nodo: tid, name
function _fe_news_return_tags_array($nid = ''){
  global $language;

  $node = node_load($nid);
  $tags = field_get_items('node', $node, 'field_tags');

  $result = array();
  if ($tags != NULL && !empty($tags)){
    foreach ($tags as $tag) {
      $term = taxonomy_term_load($tag['tid']);
      $result[$tag['tid']] = $term->name;
    }
  }

  return $result;
}

/**
 * Implements hook_theme()
 */

function fe_news_theme() {
  $themes = array(
    'node__news' => array(
      'variables' => array('node' => array()),
      'template' => 'theme/node--news',
    ),
    'last_posts_authors' => array(
      'template' => 'last-posts-authors',
      'path' => drupal_get_path('module', 'fe_news') . '/theme',
      'variables' => array(
        'authors' => NULL,
        'show_more' => NULL,
      ),
    ),
    'news_topic_block' => array(
      'template' => 'theme/topic-block',
      'variables' => array('name' => '', 'url' => ''),
    ),
  );

  return $themes;
}

/**
 * Implements hook_block_info()
 */

function fe_news_block_info() {
  $blocks = array();

  $blocks['last_posts_authors']  = array('info' => 'Gets authors for the last 10 posts.');
  $blocks['field_topic_block'] = array('info' => 'Bloque para los topics en el header');

  return $blocks;
}

/**
 * Implements hook_block_view()
 */
function fe_news_block_view($delta = '') {
  $block = array();

  if ($delta == 'last_posts_authors') {
    $block = array(
      'subjet' => NULL,
      'content' => _fe_news_last_posts_authors_callback(),
    );
  }
  else if ($delta == 'field_topic_block') {
    $block['subject'] = '';
    $block['content'] = _fe_news_get_topics();
  }
  return $block;
}

function _fe_news_last_posts_authors_callback($tid = FALSE) {
  $last_posts_authors = _fe_news_get_last_posts_authors($tid);

  return theme(
    'last_posts_authors',
    array('authors' => $last_posts_authors)
  );
}

function _fe_news_get_last_posts_authors($tid = NULL) {
  global $language;
  $authors = array();
  $authors_uid = array();

  $view = views_get_view('last_posts');
  if ($view) {
    $view->set_display('block');
    $view->set_items_per_page(40);
    if ($tid) {
      $view->set_arguments(array($tid));
      $view->set_items_per_page(0);
    }
    $view->execute();
    foreach($view->result as $index => $content){
      if ((sizeof($authors) < 10) || $tid) {
        $author = _fe_news_get_author($content->nid);
        if (!isset($author->uid)) {
          continue;
        }

        $user = user_load($author->uid);
        $show_profile = FALSE;
        if (!empty($user->field_show_profile)) {
          if (!empty($user->field_show_profile[$user->language][0]['value'])) {
            $show_profile = $user->field_show_profile[$user->language][0]['value'];
          }
        }
        if ($show_profile) {

          if (isset($author->uid)) {
            if (!in_array($author->uid, $authors_uid)) {
              $authors_uid[] = $author->uid;
              $authors[] = $author;
            }
          } else {
            if (!in_array($author->name, $authors_uid)) {
              $authors_uid[] = $author->name;
              $authors[] = $author;
            }
          }
        }
      }
    }
  }

  return $authors;
}

function _fe_news_get_author($nid) {
  $node = node_load($nid);
  $language = $node->language;

  $author = new stdClass();
  $author->profile_link = FALSE;
  if (!empty($node->field_attribution)) {
    $author->name = (isset($node->field_attribution[$language])) ?
      $node->field_attribution[$language][0]['safe_value'] :
      $node->field_attribution[LANGUAGE_NONE][0]['safe_value'];
  }
  else {
    if (!empty($node->field_byline)) {
      $user = (isset($node->field_byline[$language])) ?
        user_load($node->field_byline[$language][0]['uid']) :
        user_load($node->field_byline[LANGUAGE_NONE][0]['uid']);
    }
    else {
      $user = user_load($node->uid);
    }
    $author->uid = $user->uid;
    $author->name = _fe_news_get_safe_value($user, 'field_screen_name');
    $author->profile_link = drupal_get_path_alias('user/' . $user->uid);
    $author->avatar = isset($user->picture) ?
      theme_image_style(array(
        'path' => $user->picture->uri,
        'style_name' => 'avatar_small_img',
        'width' => '110',
        'height' => '110')
        ) :  null;
    $author->job = _fe_news_get_safe_value($user, 'field_job_title');
    $author->organization = _fe_news_get_safe_value($user, 'field_organization_name');
  }

  return $author;
}

/**
 * Implements hook_form_alter().
 */
function fe_news_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'comment_node_news_form') {
    hide($form['author']);
  }
}

/**
 * Helper to pull value regardless of language
 */
function _fe_news_get_safe_value($entity, $field_name) {
	global $language;

  if (!isset($entity->$field_name) || !is_array($entity->$field_name) || empty($entity->$field_name)) {
    return '';
  }

  // try to use value for current language
  $lang_code = $language->language;
	if (isset($entity->{$field_name}[$lang_code])) {
		$item = $entity->{$field_name}[$lang_code];
	}
	else if (isset($entity->{$field_name}['en'])) {
		// try english if available
    $item = $entity->{$field_name}['en'];
	}
	else {
    // use whatever we have.
    $keys = array_keys($entity->$field_name);
    $item = $entity->{$field_name}[$keys[0]];
	}
  $value = isset($item[0]['safe_value']) ?
    $item[0]['safe_value'] :
    '';

  return $value;
}

function _fe_news_get_topics($nid = '') {
  $nid = $nid ? $nid : arg(1);
  $node = node_load($nid);
  $exclusion_list = array(913, 914, 915, 916, 917, 918, 919);
  global $language;
  $tid = '';

  if (!empty($node->field_primary_topic[LANGUAGE_NONE])){
    foreach ($node->field_primary_topic[LANGUAGE_NONE] as $topic){
      if (!in_array($topic['tid'], $exclusion_list)) {
        $tid = $topic['tid'];
        break;
      }
    }
  }
  else if (!empty($node->field_topic[LANGUAGE_NONE])) {
    foreach ($node->field_topic[LANGUAGE_NONE] as $topic) {
      if (!in_array($topic['tid'], $exclusion_list)) {
        $tid = $topic['tid'];
        break;
      }
    }
  }

  else if (!empty($node->field_category[LANGUAGE_NONE])) {
    $tid = '';
    foreach ($node->field_category[LANGUAGE_NONE] as $topic) {
      if (!in_array($topic['tid'], $exclusion_list)) {
        $tid = $topic['tid'];
        break;
      }
    }
  }

  if ($tid) {
    $term = taxonomy_term_load($tid);
    $name = $term->name;
    $type = '';
    if ($node->type == 'news') {
      $type = 'news';
    }
    else if ($node->type == 'training_opportunity') {
      $type = 'opportunities';
    }
    else if ($node->type == 'video') {
      $type = 'videos/topic';
    }
    $url = '/' . $language->language . '/' . $type . '/' . $tid;
    return theme('news_topic_block', array('name' => $name, 'url' => $url));
  }

  return '';
}

/**
 * Implements hook_form_FORM_ID_alter.
 */
function fe_news_form_news_node_form_alter(&$form, &$form_state, $form_id) {
  hide($form['field_news_type']);
}
