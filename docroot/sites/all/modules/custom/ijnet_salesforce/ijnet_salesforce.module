<?php
/**
 * @file
 * Code for the ijnet_salesforce feature.
 */

include_once 'ijnet_salesforce.features.inc';
/**
 * @file
 * Code for the Contact form.
 */
 
function ijnet_salesforce_menu() {
  $items['contact-ijnet'] = array(
    'title' => 'IJNET Contact',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ijnet_salesforce_contact_form'),
    'access callback' => TRUE,
  );

  return $items;
}


function ijnet_salesforce_contact_form($form, &$form_state) {
  $form['first_name'] = array(
    '#type' => 'textfield',
    '#title' => t('First Name'),
    '#size' => 60,
    '#required' => TRUE,
  );
  $form['last_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Last Name'),
    '#size' => 60,
    '#required' => TRUE,
  );
  $form['organization_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Organiztion Name'),
    '#size' => 60,
    '#required' => TRUE,
  );
  $form['position'] = array(
    '#type' => 'textfield',
    '#title' => t('Position'),
    '#size' => 60,
    '#required' => TRUE,
  );
  $form['personal_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Personal Email'),
    '#size' => 60,
    '#required' => TRUE,
  );
  $form['work_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Work Email'),
    '#size' => 60,
    '#required' => FALSE,
  );
  $form['mobile'] = array(
    '#type' => 'textfield',
    '#title' => t('Mobile'),
    '#size' => 60,
    '#required' => FALSE,
  );
  $form['twitter_handle'] = array(
    '#type' => 'textfield',
    '#title' => t('Twitter Handle'),
    '#size' => 60,
    '#required' => FALSE,
  );
  $form['mailing_address'] = array(
    '#type' => 'textfield',
    '#title' => t('Mailing Address'),
    '#size' => 60,
    '#required' => FALSE,
  );
  $form['city'] = array(
    '#type' => 'textfield',
    '#title' => t('City'),
    '#size' => 60,
    '#required' => TRUE,
  );
  $form['country'] = array(
    '#type' => 'textfield',
    '#title' => t('Country'),
    '#size' => 60,
    '#required' => TRUE,
  );
  $form['receive_updates'] = array(
    '#type' => 'checkbox',
    '#title' => t('Receive updates'),
    '#required' => TRUE,
    '#description' => t("Yes! I would like to receive updates and information from IJNet's producing organization, the International Center for Journalists. &nbsp;Do not check this box if you only want your information shared with IJNet.")
  );
  $form['terms'] = array(
    '#type' => 'item',
    '#title' => t('**The International Center for Journalists (ICFJ) is committed to safeguarding your privacy. ICFJ does not share information collected on the Web site with third parties.*')
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

function ijnet_salesforce_preprocess_page(&$vars, $hook) {
  global $language;
  if ($language->language == 'en') {
    drupal_add_js(drupal_get_path('module', 'ijnet_salesforce') . '/js/ijnet_salesforce.js');
  }
}

function ijnet_salesforce_contact_form_submit($form, &$form_state) {
  $values = $form_state['values'];

  $new_contact = new stdClass();
  $new_contact->name = $values['first_name'] . ' ' . $values['last_name'];
  $new_contact->email = $values['personal_email'];
  $cc = _fe_newsletter_cc_get_connection();
  $contact = $cc->query_contacts($new_contact->email);
  if($contact) {
    _fe_newsletter_cc_update_list($new_contact) ?
      drupal_set_message(t('Success, you are now subscribed to our mailing list.'), 'status') :
      drupal_set_message(t('Sorry, you are subscribed to our mailing list.'), 'error');
  } else {
    _fe_newsletter_cc_subscribe_list($new_contact) ?
      drupal_set_message(t('Success, you are now subscribed to our mailing list.'), 'status') :
      drupal_set_message(t('Sorry, there was a problem, please ensure your details are valid and try again.'), 'error');
  }

  _ijnet_salesforce_set_library();
  try {
    $soapclient = _ijnet_salesforce_get_client();
    $describe = $soapclient->describeSObjects(array('Lead'));
    $lead = _ijnet_salesforce_get_lead($values);
    $response = $soapclient->create($lead);
  } catch (Exception $e) {
    drupal_set_message(t('Something went wrong, please try again later.'), 'error');
  }
  $response[0]->success ?
    drupal_set_message(t('Thank you for subscribing to the newsletter.'), 'status') :
    drupal_set_message(t('Something went wrong, please try again later.'), 'error');
}

function _ijnet_salesforce_set_library() {
  module_load_include('php', 'ijnet_salesforce', 'soapclient/SforcePartnerClient');
}

function _ijnet_salesforce_get_client() {
  _ijnet_salesforce_set_library();
  $username = variable_get('ijnet_salesforce_ws_username', 'mlooney@icfj.org');
  $password = variable_get('ijnet_salesforce_ws_password', 'ijnet1234');
  $security_token = variable_get('ijnet_salesforce_ws_security_token', 'ExlEfUTf8KySovlrLjph7pk1u');

  try {
    $mySforceConnection = new SforcePartnerClient();
    $mySforceConnection->createConnection(drupal_get_path('module', 'ijnet_salesforce') . '/soapclient/partner.wsdl.xml');
    $mySforceConnection->login($username, $password.$security_token);
  } catch (Exception $e) {
    throw $e;
  }

  return $mySforceConnection;
}

function _ijnet_salesforce_get_lead($fields) {
  $leads = array();
  $lead = new SObject();

  $lead->fields = array(
    'FirstName' => $fields['first_name'],
    'LastName' => $fields['last_name'],
    'Company' => $fields['organization_name'],
    'Title' => $fields['position'],
    'Email' => $fields['personal_email'],
    'Secondary_Email__c' => $fields['work_email'], // TODO SecondaryEmail
    'MobilePhone' => $fields['mobile'],
    'Twitter__c' => $fields['twitter_handle'], // TODO Twitter
    'Google_c_' => $fields['mailing_address'], // TODO Google+
    'City' => $fields['city'],
    'Country' => $fields['country']
  );
  $lead->type = 'Lead';
  $leads[] = $lead;

  return $leads;
}
